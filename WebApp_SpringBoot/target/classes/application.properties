#This is config
server.port=444

# I am going to use JSP in this project
spring.mvc.view.prefix=/
spring.mvc.view.suffix=.jsp

#configuring mysqlconnection, first need to use spring-boot-starter-jdbc dependency alongwith sqlconnector dependency
spring.datasource.url=jdbc:mysql://localhost:3306/db_restapi
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver


#Hibernate dialect gives information to the framework of how to convert hibernate queries(HQL) into native SQL queries.
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect or ...MySQL5Dialect //this vs below
#Innodb and MyISAM are storage engines for SQL tables, Innodb is easier for transactional purposes, MyISAM for table optimizn
#https://dev.mysql.com/doc/refman/8.0/en/myisam-storage-engine.html

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
#//MySQL8MyISAMDialect OR MySQL8InnoDBDialect   
spring.jpa.hibernate.ddl-auto = update

#below code to show formatted sql queries in console
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# Hibernate ddl auto (create, create-drop, update)
# Data definition language (DDL) describes the portion of SQL that creates, alters, and deletes database objects.
# These database objects include schemas, tables, views, sequences, catalogs, indexes, variables, masks, permissions, and aliases.

#1 create -Hibernate first drops existing tables, then creates new tables
#2 update -the object model created based on the mappings (annotations or XML) is compared with the existing schema,
	#and then Hibernate updates the schema according to the diff. It never deletes the existing tables or columns even 
	#if they are no more required by the application. creates schema and database automatically
#3 create-drop -similar to create, with the addition that Hibernate will drop the database after all operations are completed. 
	#Typically used for unit testing
#4 validate -Hibernate only validates whether the tables and columns exist, otherwise it throws an exception
#5 none -this value effectively turns off the DDL generation
#more :https://docs.spring.io/spring-boot/docs/1.1.0.M1/reference/html/howto-database-initialization.html








